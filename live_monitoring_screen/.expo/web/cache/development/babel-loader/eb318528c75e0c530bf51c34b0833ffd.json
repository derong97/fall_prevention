{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/pi/Desktop/posture-detection/live_monitoring_screen/pages/bedNumberPage.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faToilet, faAngleDoubleRight, faWalking } from \"@fortawesome/free-solid-svg-icons\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nvar api = axios.create({\n  baseURL: \"http://localhost:3000/current_patient_details\"\n});\nvar timeStarted = Date.now();\n\nvar bedNumberPage = function (_React$Component) {\n  _inherits(bedNumberPage, _React$Component);\n\n  var _super = _createSuper(bedNumberPage);\n\n  function bedNumberPage(props) {\n    var _this;\n\n    _classCallCheck(this, bedNumberPage);\n\n    _this = _super.call(this, props);\n\n    _this.backPage = function () {\n      _this.props.history.push(\"/\");\n    };\n\n    _this.nextPage = function () {\n      _this.props.history.push({\n        pathname: \"/fallriskstatus\",\n        state: {\n          patientAccompanied: _this.state.patientAccompanied,\n          bedNumber: _this.state.bedNumber,\n          timeStarted: _this.state.timeStarted\n        }\n      });\n    };\n\n    _this.onBedNumberChange = function (value) {\n      _this.setState({\n        bedNumber: value\n      }, function () {});\n    };\n\n    _this.getData = function () {\n      api.get('/').then(function (res) {\n        console.log(res.data[0]);\n        var data = res.data[0];\n      });\n    };\n\n    _this.postData = function () {\n      var params = {\n        bed_number: _this.state.bedNumber,\n        patient_accompanied: _this.state.patientAccompanied,\n        time_started: _this.state.timeStarted,\n        time_stopped: 0\n      };\n      api.post(\"/\", params).then(function (res) {\n        console.log(res.status);\n      });\n    };\n\n    _this.onSubmitBedNumber = function () {\n      if (isNaN(_this.state.bedNumber)) {\n        _this.setState({\n          isNotNumeric: 1\n        }, function () {\n          _this.render();\n        });\n      } else if (_this.state.bedNumber <= 0 || _this.state.bedNumber > 40) {\n        _this.setState({\n          isNotValidBedNumber: 1\n        }, function () {\n          _this.render();\n        });\n      } else {\n        _this.postData();\n\n        _this.nextPage();\n      }\n    };\n\n    _this.state = {\n      patientAccompanied: props.location.state.patientAccompanied,\n      bedNumber: 0,\n      isNotNumeric: 0,\n      isNotValidBedNumber: 0,\n      timeStarted: timeStarted\n    };\n    return _this;\n  }\n\n  _createClass(bedNumberPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textHeaderLight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 10\n        }\n      }, \"Patient is:\"), React.createElement(Text, {\n        style: styles.textAccompaniedStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, this.state.patientAccompanied ? \"Accompanied\" : \"Alone\")), React.createElement(View, {\n        style: styles.bedNumberForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textHeaderDark,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Enter bed number:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"enter bed number\",\n        onChangeText: function onChangeText(value) {\n          return _this2.onBedNumberChange(value);\n        },\n        keyboardType: \"number-pad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }\n      }), React.createElement(Text, {\n        style: styles.textAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, this.state.isNotNumeric ? \"Invalid input. Please key in a number.\" : null), React.createElement(Text, {\n        style: styles.textAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, this.state.isNotValidBedNumber ? \"Invalid bed number. Please key in a valid bed number.\" : null)), React.createElement(View, {\n        style: styles.divider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.buttons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, React.createElement(\"button\", {\n        id: \"default-bttn\",\n        type: \"button\",\n        className: \"btn btn-outline-dark\",\n        onClick: function onClick() {\n          return _this2.backPage();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faAngleLeft,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }), React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, \"back\")), React.createElement(\"button\", {\n        id: \"default-bttn\",\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: function onClick() {\n          return _this2.onSubmitBedNumber();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faWalking,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }), React.createElement(FontAwesomeIcon, {\n        icon: faAngleDoubleRight,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }), React.createElement(FontAwesomeIcon, {\n        icon: faToilet,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }), React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, \"start toileting session\"))));\n    }\n  }]);\n\n  return bedNumberPage;\n}(React.Component);\n\nexport default withRouter(bedNumberPage);\nvar styles = StyleSheet.create({\n  status: {\n    flex: 1,\n    backgroundColor: '#353b40',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px'\n  },\n  bedNumberForm: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '30px'\n  },\n  buttons: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: \"100px\",\n    justifyContent: \"space-between\",\n    marginBottom: 36,\n    padding: 30\n  },\n  textAccompaniedStatus: {\n    fontFamily: \"Gotham-Ultra\",\n    fontSize: \"60px\",\n    color: \"white\"\n  },\n  textHeaderLight: {\n    fontFamily: \"Gotham-Black\",\n    fontSize: \"30px\",\n    color: \"white\"\n  },\n  textHeaderDark: {\n    fontFamily: \"Gotham-Black\",\n    fontSize: \"20px\",\n    color: \"#566c79\"\n  },\n  textAlert: {\n    fontFamily: \"Gotham-Medium\",\n    color: \"red\",\n    fontSize: \"15px\"\n  },\n  divider: {\n    padding: \"180px\"\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: \"#566c79\",\n    padding: 8,\n    margin: 10,\n    width: 200,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/pi/Desktop/posture-detection/live_monitoring_screen/pages/bedNumberPage.jsx"],"names":["React","Component","FontAwesomeIcon","faAngleLeft","faToilet","faAngleDoubleRight","faWalking","withRouter","axios","api","create","baseURL","timeStarted","Date","now","bedNumberPage","props","backPage","history","push","nextPage","pathname","state","patientAccompanied","bedNumber","onBedNumberChange","value","setState","getData","get","then","res","console","log","data","postData","params","bed_number","patient_accompanied","time_started","time_stopped","post","status","onSubmitBedNumber","isNaN","isNotNumeric","render","isNotValidBedNumber","location","styles","textHeaderLight","textAccompaniedStatus","bedNumberForm","textHeaderDark","input","textAlert","divider","buttons","StyleSheet","flex","backgroundColor","alignItems","justifyContent","padding","flexDirection","height","marginBottom","fontFamily","fontSize","color","borderWidth","borderColor","margin","width","textAlign"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {StyleSheet, Text, TextInput, View} from 'react-native';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faAngleLeft,faToilet,faAngleDoubleRight, faWalking} from \"@fortawesome/free-solid-svg-icons\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"http://localhost:3000/current_patient_details\"\n  })\n\nconst timeStarted = Date.now()\n\nclass bedNumberPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientAccompanied: props.location.state.patientAccompanied,\n      bedNumber: 0,\n      isNotNumeric: 0,\n      isNotValidBedNumber: 0,\n      timeStarted: timeStarted\n    };\n  }\n\n  backPage = () => {\n    this.props.history.push(\"/\");\n  }\n\n  nextPage = () => {\n    this.props.history.push({ pathname: \"/fallriskstatus\", state: {patientAccompanied: this.state.patientAccompanied, bedNumber: this.state.bedNumber, timeStarted: this.state.timeStarted}});\n  }\n\n  onBedNumberChange = (value) => {\n     \n      this.setState({bedNumber: value}, () => {\n      });\n\n  }\n\n  getData = () => {\n    api.get('/').then(res => {\n    console.log(res.data[0])\n    const data = res.data[0]\n\n   })\n  }\n\n  postData = () => {\n\n    const params = { \n        bed_number: this.state.bedNumber,\n        patient_accompanied: this.state.patientAccompanied,\n        time_started: this.state.timeStarted,\n        time_stopped: 0,\n      }\n\n      api.post(\"/\", params)\n      .then((res) => {\n          console.log(res.status);\n      })\n  }\n\n\n  onSubmitBedNumber = () => {\n\n    if (isNaN(this.state.bedNumber)){\n        this.setState({isNotNumeric: 1} , () => {\n            this.render()\n        })\n\n    } else if ((this.state.bedNumber <= 0) || (this.state.bedNumber > 40)) {\n        this.setState({isNotValidBedNumber: 1} , () => {\n            this.render()\n        })\n\n    } else {\n        this.postData();\n        this.nextPage();\n    }\n\n  }\n\n  render () {\n    return (\n      <View>\n        <View style = {styles.status}>\n         <Text style = {styles.textHeaderLight}>Patient is:</Text>\n          <Text style = {styles.textAccompaniedStatus}>{this.state.patientAccompanied ? \"Accompanied\" : \"Alone\"}</Text>\n        </View>\n\n        <View style = {styles.bedNumberForm}>\n            <Text style = {styles.textHeaderDark}>Enter bed number:</Text>\n             <TextInput \n                style = {styles.input}\n                placeholder = \"enter bed number\"\n                onChangeText = {(value) => this.onBedNumberChange(value)}\n                keyboardType = \"number-pad\"\n                />\n\n            <Text style = {styles.textAlert}>{this.state.isNotNumeric ? \"Invalid input. Please key in a number.\" : null}</Text>   \n\n            <Text style = {styles.textAlert}>{this.state.isNotValidBedNumber ? \"Invalid bed number. Please key in a valid bed number.\" : null}</Text>   \n\n        </View>\n\n        <View style = {styles.divider}></View>\n\n        {/* <div style = {styles.divider}></div> */}\n\n        <View style = {styles.buttons}>\n          <button id=\"default-bttn\" type=\"button\" className=\"btn btn-outline-dark\" onClick={() => this.backPage()}>\n            <FontAwesomeIcon icon ={faAngleLeft} size = \"2x\" />\n            <div>back</div>\n            </button>\n\n            <button id=\"default-bttn\" type=\"button\" className=\"btn btn-success\" onClick={() => this.onSubmitBedNumber()}>\n            <FontAwesomeIcon icon ={faWalking} size = \"2x\" />\n            <FontAwesomeIcon icon ={faAngleDoubleRight} size = \"2x\" />\n            <FontAwesomeIcon icon ={faToilet} size = \"2x\" />\n            <div>start toileting session</div>\n            </button>\n        </View>\n      </View>  \n    );\n  }\n  \n}\n\nexport default withRouter(bedNumberPage);\n\n\n\nconst styles = StyleSheet.create({\n  status: {\n    flex: 1,\n    backgroundColor: '#353b40',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n  },\n\n  bedNumberForm: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '30px',\n  },\n\n  buttons: {\n    flex: 1,\n    flexDirection: \"row\",\n    height: \"100px\",\n    justifyContent: \"space-between\",\n    marginBottom: 36,\n    padding: 30\n  },\n\n  textAccompaniedStatus: {\n      fontFamily: \"Gotham-Ultra\",\n      fontSize: \"60px\",\n      color: \"white\"\n  },\n\n  textHeaderLight: {\n    fontFamily: \"Gotham-Black\",\n    fontSize: \"30px\",\n    color: \"white\"\n},\n\ntextHeaderDark: {\n    fontFamily: \"Gotham-Black\",\n    fontSize: \"20px\",\n    color: \"#566c79\"\n},\n\n\ntextAlert: {\n    fontFamily: \"Gotham-Medium\",\n    color: \"red\",\n    fontSize: \"15px\"\n},\n\n  divider: {\n    padding: \"180px\",\n  },\n\n  input : {\n    borderWidth: 2, \n    borderColor: \"#566c79\",\n    padding: 8,\n    margin: 10,\n    width: 200,\n    textAlign: \"center\"\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}